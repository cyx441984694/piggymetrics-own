#As the auth-service always needs me to bring up config-service, I skip all testing directly.
script:
  - echo "skipping tests"

language: java

jdk:
  - oraclejdk11


dist: trusty
sudo: required

services:
  - docker

##It is for encrypted msg.
## Use travis to execute "travis encrypt somevar=secretvalue" and add the encrypted value in the secure value.
env:
  global:
    - secure: "hxV/UykkVSlnmUX9KQ/5NfyrVSxgtzpD6ZAWz+vuj11M165LwsB2eeT+SlpOfaUTq2cglSpo4pbQB6/Q4XIS0GCAdBtaS8+FpecLCyfoS9sNzeMy18OjEGYwbXoTAclFruPW9cjBZ8BW5wOX3BupmaGOZ7yfR0wHccPFnOXeiXvKSJaiu0NeQejHYQAQYjO43LaNCoL7G5Joq/sZRbTfa8pYi8RYFdP4hDTmVzGEc3/ssUsJy3KSLNdxdLVp1CGOEl+GZtuD4r5ad4nAIdCSRjBGQ45B31CDCdBcEGYz1qOPEo21cIWEwEJbIJRhODKvM5o9xr4RGGibk7aIrvwNRPozBFY7SSJaGFQBM1U/iP7CJ1Q8u2X/KHJ0/pCmxBv+dQKfi5DzBHx0iW8ttzHpjn0B2asRMf5VD5FBZnj5YrqZK/0R3HuasZMl+lJLZ4NHqx9E/Vhip4T5oUNyVQbaeQDPekWl+KUr/nBqxJRmeqhDnp7p7dOFeCmXDwXMVMaKN00mWAhl9zPYtNJuaTaZEXKBOvRx3nNfh/IJMZF0tVuOkHidbOiviRf9CSMqZEsuUUwvC8qSTs9Cm2v+Byx13eJ1nQ463zqgoGZ8Nk/+esz42djDioe6itg8XJTAH2WmglOj7RnbD05M0ld41EGNE0yJEg1xi3+6Year5o9A9ms=" # DOCKER_EMAIL
    - secure: "Tob2y+dBjFQEv2ePyWsjAehrXbx2KbeHF+aNU5jmgfrad/BXUGqu7p63R4YwAIO/1wA3ia4meoTbFyJ9mKSDyimRCzjKWe5QL5boTMJX5MJVu7H6jSTLr90ZypU4OUT9jS27utb8S6V/n5/4AY/AoLHAWRBD1EVY61r9P1YYSD5szIqL55EPvBTaPCjQ1yCyZmt+R0qge7u3KK22glbm9C3al4wD563NcC7993IZd7IU6ZFtHha6OqSCiz0H2M90CcfrnBitBDWDYE4hycppHDbfivf2t3VwIcKbY8hroJ4iPm5itwy84GOKHr9uvokDdCWjUvyof8St8R8KWDLZhw3YwMDeEdUM1rQZ43V7LOZF2df8ssCpg/4VpY4k8i9ogApwm0TjFNoSA/ekJcOQ8FqVNuMGAX+UcY2JTtX8WlwZKCWJKJe1aAydKQ9zhRoW/n3GVIPJ+804b5MeZJHO8OCKdE+vnmlts+2Z4ThEhPOykAPfgrewaQoVVoRjdKFuoa0iayh2nTDsYA++4CaeVA85cf4KTrQ9BS86kjTST8fYPPx0elFrkDDb0s3SeeynFJtXWggZ3tyGbwFkgCnjitV1LJV0iZ6o+ZQZkvpkjY6RxvBfT8mF4xT6bgj1GcuPcPbT6qLYJL0PLITGTSMYRFXKN8f3SDlI3y6MZkjV3pg=" # DOCKER_USER
    - secure: "PJMyF6gJoCL/vBq8zP46AOp7NBhLBZr0mlgpNIfoZ57WIXGt6V8HKLZhxPlEjRpusIF9p6Yz24TOiwhWfV6U7qM2dpscjluWBvNqrweK2UFGlVGJskS0a+hDpYohjDaw6UwvnOnG4ECoOOoBYe0UTcJ57eZOz1sgRAip84YImX+oYFPemno/pLgJ5AkZhkYPwMV3SpppE2nuGKIU2exVqkIYJMYDjl6YtOC/V5HwJBRVMDzFYmPgyuW7lhibi+auusvx8UKW8r/YO/VY3hCp2IBwOAQNqr1n8FGyDZt4iQy2F2vVmwh6l4niN5U4eptlbNmJ0NoEtIKysPKRmun65pB5Jwz2uv3+HdUV8N+KFTgtkCYHyYQsm4BtPd3pROTeRq8eunbS25blTo2VKJSLBrrr5SJSnSF9IviBoGIkKMQDs52znmSfpONq7AqVD1n4yjLEF3IdgN4GR6uDV2EPSkOlci4r2gnmdl39EdSPG/PpY4ZvtG8kkf28nXrzVOSNrX6CX08OCa1m0ho95sne38evuMkbSM1s7suSH4qKHmLd6hxLAwg9+m7xrzZaFe+9Sl4VTzC0tIqG5iPQXH3LjhipfR5kMJh0c4qaYUnBTHtGQ78XMXEVUK0DdCUnnMFjNwv3IkESUzjaiVeu2Lpo6dBaf9kzmYT23THzLs1gEpo=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::7}

after_success:
##  Codecov not support jdk11, hence annotate it
#  - bash <(curl -s https://codecov.io/bash)
  - docker login -u $DOCKER_USER -p $DOCKER_PASS

  #TAG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`

  # CONFIG SERVICE
  - export CONFIG=cyx441984694/piggymetrics-own-config
  - docker build -t $CONFIG:$COMMIT ./config
  - docker tag $CONFIG:$COMMIT $CONFIG:$TAG
  - docker push $CONFIG

  # REGISTRY
  - export REGISTRY=cyx441984694/piggymetrics-own-registry
  - docker build -t $REGISTRY:$COMMIT ./registry
  - docker tag $REGISTRY:$COMMIT $REGISTRY:$TAG
  - docker push $REGISTRY

  # GATEWAY
  - export GATEWAY=cyx441984694/piggymetrics-own-gateway
  - docker build -t $GATEWAY:$COMMIT ./gateway
  - docker tag $GATEWAY:$COMMIT $GATEWAY:$TAG
  - docker push $GATEWAY

  # AUTH SERVICE
  - export AUTH_SERVICE=cyx441984694/piggymetrics-own-authservice
  - docker build -t $AUTH_SERVICE:$COMMIT ./auth-service
  - docker tag $AUTH_SERVICE:$COMMIT $AUTH_SERVICE:$TAG
  - docker push $AUTH_SERVICE

  # ACCOUNT SERVICE
  - export ACCOUNT_SERVICE=cyx441984694/piggymetrics-own-accountservice
  - docker build -t $ACCOUNT_SERVICE:$COMMIT ./account-service
  - docker tag $ACCOUNT_SERVICE:$COMMIT $ACCOUNT_SERVICE:$TAG
  - docker push $ACCOUNT_SERVICE

  # STATISTICS SERVICE
  - export STATISTICS_SERVICE=cyx441984694/piggymetrics-own-statisticsservice
  - docker build -t $STATISTICS_SERVICE:$COMMIT ./statistics-service
  - docker tag $STATISTICS_SERVICE:$COMMIT $STATISTICS_SERVICE:$TAG
  - docker push $STATISTICS_SERVICE

  # NOTIFICATION_SERVICE
  - export NOTIFICATION_SERVICE=cyx441984694/piggymetrics-own-notificationservice
  - docker build -t $NOTIFICATION_SERVICE:$COMMIT ./notification-service
  - docker tag $NOTIFICATION_SERVICE:$COMMIT $NOTIFICATION_SERVICE:$TAG
  - docker push $NOTIFICATION_SERVICE

  # MONITORING
  - export MONITORING=cyx441984694/piggymetrics-own-monitoring
  - docker build -t $MONITORING:$COMMIT ./monitoring
  - docker tag $MONITORING:$COMMIT $MONITORING:$TAG
  - docker push $MONITORING

  # TURBINE STREAM SERVICE
  - export TURBINE=cyx441984694/piggymetrics-own-turbinestreamservice
  - docker build -t $TURBINE:$COMMIT ./turbine-stream-service
  - docker tag $TURBINE:$COMMIT $TURBINE:$TAG
  - docker push $TURBINE

  # MONGO DB
  - export MONGO_DB=cyx441984694/piggymetrics-own-mongodb
  - docker build -t $MONGO_DB:$COMMIT ./mongodb
  - docker tag $MONGO_DB:$COMMIT $MONGO_DB:$TAG
  - docker push $MONGO_DB
